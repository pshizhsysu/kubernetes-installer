---
- hosts: all
  gather_facts: no
  tasks:
  - include_role:
      name: pre-ops
      tasks_from: set.yml
  - include_role:
      name: "runtime/{{runtime}}"
      tasks_from: install.yml
  - include_role:
      name: kubeadm-kubelet-kubectl
      tasks_from: install.yml

- hosts: master
  gather_facts: no
  tasks:
  - include_role:
      name: keepalived
      tasks_from: install-master.yml
    when: need_to_install_keepalived == "yes" and inventory_hostname == groups.master[0]
  - include_role:
      name: keepalived
      tasks_from: install-backup.yml
    when: need_to_install_keepalived == "yes" and inventory_hostname != groups.master[0]
  - include_role:
      name: master
      tasks_from: init.yml
    when: inventory_hostname == groups.master[0]
  - include_role:
      name: master
      tasks_from: register-join-vars.yml
    when: inventory_hostname == groups.master[0]
  - include_role:
      name: master
      tasks_from: join.yml
    vars: 
      control_plane_endpoint: "{{hostvars[groups.master[0].control_plane_endpoint]}}"
      certificate_key: "{{hostvars[groups.master[0].certificate_key]}}"
      token: "{{hostvars[groups.master[0].token]}}"
      ca_cert_hash: "{{hostvars[groups.master[0].ca_cert_hash]}}"
    when: inventory_hostname != groups.master[0]
  - include_role:
      name: plugins
      tasks_from: install.yml
    when: inventory_hostname == groups.master[0]
  
- hosts: node
  gather_facts: no
  tasks:
  - include_role:
      name: node
      tasks_from: join.yml
    vars: 
      control_plane_endpoint: "{{hostvars[groups.master[0].control_plane_endpoint]}}"
      token: "{{hostvars[groups.master[0].token]}}"
      ca_cert_hash: "{{hostvars[groups.master[0].ca_cert_hash]}}"
