---
- name: <获取discovery-token-ca-cert-hash>
  shell: |
    openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
  register: ca_cert_hash
  
#- name: get bootstrap-token
#  shell: |
#    kubeadm token list | grep authentication | grep -Pzo [a-z0-9]{6}.[a-z0-9]{16} | head -n 1 | awk '{print $1}' 
#  register: bootstrap_token

- name: <创建bootstrap-token>
  shell: | 
    kubeadm token create 2>/dev/null | grep -Pzo [a-z0-9]{6}.[a-z0-9]{16}
  register: bootstrap_token
#  when: bootstrap_token.stdout == ''

- name: <获取control_plane_endpoint>
  shell: |
    grep server /etc/kubernetes/kubelet.conf | grep -Pzo '[0-9]{1,3}[\.][0-9]{1,3}[\.][0-9]{1,3}[\.][0-9]{1,3}[\:][0-9]{2,5}'
  register: master_url

- name: <保存join命令>
  set_fact:
    kubeadm_join_master_command: "kubeadm join {{ master_url.stdout }} --token {{ bootstrap_token.stdout }} --discovery-token-ca-cert-hash sha256:{{ ca_cert_hash.stdout }} --control-plane"
    kubeadm_join_node_command: "kubeadm join {{ master_url.stdout }} --token {{ bootstrap_token.stdout }} --discovery-token-ca-cert-hash sha256:{{ ca_cert_hash.stdout }}"
